'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toHaveState;

var _negateMessage = require('../negateMessage');

var _negateMessage2 = _interopRequireDefault(_negateMessage);

var _deepEqualIdent = require('deep-equal-ident');

var _deepEqualIdent2 = _interopRequireDefault(_deepEqualIdent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This source code is licensed under the MIT-style license found in the
 * LICENSE file in the root directory of this source tree. *
 *
 * @providesModule toHaveStateAssertion
 * 
 */

function toHaveState(enzymeWrapper, stateKey, stateValue) {
  var state = enzymeWrapper.state();

  // error if the state key doesnt exist
  if (!state.hasOwnProperty(stateKey)) {
    return {
      pass: false,
      message: 'Expected component state to have key of "' + stateKey + '"'
    };
  }

  // key exists given above check, and we're not validating over values,
  // so its always true
  if (stateValue === undefined) {
    return {
      pass: true,
      message: 'Expected component state to have key of "' + stateKey + '"'
    };
  }

  var pass = (0, _deepEqualIdent2.default)(state[stateKey], stateValue);

  return {
    pass: pass,
    message: (0, _negateMessage2.default)(pass, 'Expected component state values to match for key "' + stateKey + '":\n        Actual: ' + JSON.stringify(state) + '\n        Expected: ' + JSON.stringify(stateValue) + '\n      ')
  };
}
module.exports = exports['default'];